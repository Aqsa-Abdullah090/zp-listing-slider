


// ************************** BUY ENTRY NOW CUSTOM BTN
@property --gradient-angle {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

@property --gradient-angle-offset {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

@property --gradient-percent {
  syntax: "<percentage>";
  initial-value: 5%;
  inherits: false;
}

@property --gradient-shine {
  syntax: "<color>";
  initial-value: white;
  inherits: false;
}
.buy-entry-now-wrapper {
  &.dark {
    --shiny-cta-bg: #000000;
    --shiny-cta-bg-subtle: #1a1818;
    --shiny-cta-fg: #ffffff;
    --shiny-cta-highlight: #be9f56;
    --shiny-cta-highlight-subtle: #be9f76;
  }

  &.light {
    --shiny-cta-bg: #000000;
    --shiny-cta-bg-subtle: #1a1818;
    --shiny-cta-fg: #ffffff;
    --shiny-cta-highlight: #be9f56;
    --shiny-cta-highlight-subtle: #be9f76;
  }

  .shiny-cta {
    --animation: gradient-angle linear infinite;
    --duration: 3s;
    --shadow-size: 2px;
    
    height: 36px;
    isolation: isolate;
    position: relative;
    overflow: hidden;
    cursor: pointer;
    outline-offset: 4px;
    padding: 1.25rem 1.5rem;
    font-family: inherit;
    line-height: 1.2;
    display: flex;
    align-items: center;
    justify-content: space-between;
    text-transform: uppercase;
    border: 1px solid transparent;
    color: var(--shiny-cta-fg);
    background: linear-gradient(var(--shiny-cta-bg), var(--shiny-cta-bg))
        padding-box,
      conic-gradient(
          from calc(var(--gradient-angle) - var(--gradient-angle-offset)),
          transparent,
          var(--shiny-cta-highlight) var(--gradient-percent),
          var(--gradient-shine) calc(var(--gradient-percent) * 2),
          var(--shiny-cta-highlight) calc(var(--gradient-percent) * 3),
          transparent calc(var(--gradient-percent) * 4)
        )
        border-box;
    box-shadow: inset 0 0 0 1px var(--shiny-cta-bg-subtle);
  

    &::before,
    &::after,
    span::before {
      content: "";
      pointer-events: none;
      position: absolute;
      inset-inline-start: 50%;
      inset-block-start: 50%;
      translate: -50% -50%;
      z-index: -1;
    }
  }

  /* Dots pattern */
  .shiny-cta::before {
    --size: calc(100% - var(--shadow-size) * 3);
    --position: 2px;
    --space: calc(var(--position) * 2);
    width: var(--size);
    height: var(--size);
    background: radial-gradient(
        circle at var(--position) var(--position),
        white calc(var(--position) / 4),
        transparent 0
      )
      padding-box;
    background-size: var(--space) var(--space);
    background-repeat: space;
    mask-image: conic-gradient(
      from calc(var(--gradient-angle) + 45deg),
      black,
      transparent 10% 90%,
      black
    );
    border-radius: inherit;
    opacity: 0.4;
    z-index: -1;
  }

  /* Inner shimmer */
  .shiny-cta::after {
    --animation: shimmer linear infinite;
    width: 100%;
    aspect-ratio: 1;
    background: linear-gradient(
      -50deg,
      transparent,
      var(--shiny-cta-highlight),
      transparent
    );
    mask-image: radial-gradient(circle at bottom, transparent 40%, black);
    opacity: 0.6;
  }

  .shiny-cta span {
    z-index: 1;

    &::before {
      --size: calc(100% + 1rem);
      width: var(--size);
      height: var(--size);
      box-shadow: inset 0 -1ex 2rem 4px var(--shiny-cta-highlight);
      opacity: 0;
    }
  }

  /* Animate */
  .shiny-cta {
    --transition: 800ms cubic-bezier(0.25, 1, 0.5, 1);
    transition: var(--transition);
    transition-property: --gradient-angle-offset, --gradient-percent,
      --gradient-shine;

    &,
    &::before,
    &::after {
      animation: var(--animation) var(--duration),
        var(--animation) calc(var(--duration) / 0.4) reverse paused;
      animation-composition: add;
    }

    span::before {
      transition: opacity var(--transition);
      animation: calc(var(--duration) * 1.5) breathe linear infinite;
    }
  }

  .shiny-cta:is(:hover, :focus-visible) {
    --gradient-percent: 20%;
    --gradient-angle-offset: 95deg;
    --gradient-shine: var(--shiny-cta-highlight-subtle);

    &,
    &::before,
    &::after {
      animation-play-state: running;
    }

    span::before {
      opacity: 1;
    }
  }

  @keyframes gradient-angle {
    to {
      --gradient-angle: 360deg;
    }
  }

  @keyframes shimmer {
    to {
      rotate: 360deg;
    }
  }

  @keyframes breathe {
    from,
    to {
      scale: 1;
    }
    50% {
      scale: 1.2;
    }
  }
}










.scroll__animation {

  $colorBg: #ffffff00;
  $colorOutline: #00000000;
  $colorOutlineFade: #cccccc00;

  // $widthMouse: 30px;
  $heightMouse: 50px;
  $borderMouse: 4px;

  $posMouse: 6px;
  $posText: 2px;

  $sizeTrackball: 6px;
  $posTrackball: 12px;
  $shrinkTrackball: 0.4;

  $animDuration: 10s;

  @mixin bgGradient {
    background: $colorOutlineFade
      linear-gradient(
        transparent 0%,
        transparent 50%,
        $colorOutline 50%,
        $colorOutline 100%
      );
  }

  p {
    font-family: "LATO", sans-serif;
    letter-spacing: 12px;
    text-indent: 12px;
    color: $colorOutline;
    font-size: 10px;
    animation: colorText $animDuration ease-out infinite,
      nudgeText $animDuration ease-out infinite;
  }

  .mouse {
    @include bgGradient;
    position: relative;
    // width: $widthMouse;
    height: $heightMouse;
    border-radius: 100px;
    background-size: 100% 200%;
    animation: colorSlide $animDuration linear infinite,
      nudgeMouse $animDuration ease-out infinite;
    &:before,
    &:after {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      margin: auto;
    }
    &:before {
      // width: $widthMouse - $borderMouse;
      height: $heightMouse - $borderMouse;
      background-color: $colorBg;
      border-radius: 100px;
    }
    &:after {
      background-color: #fff; // $colorOutline
      width: $sizeTrackball;
      height: $sizeTrackball;
      border-radius: 100%;
      animation: trackBallSlide $animDuration linear infinite;
    }
  }

  @keyframes colorSlide {
    0% {
      background-position: 0% 100%;
    }
    20% {
      background-position: 0% 0%;
    }
    21% {
      background-color: $colorOutlineFade;
    }
    29.99% {
      background-color: $colorOutline;
      background-position: 0% 0%;
    }
    30% {
      background-color: $colorOutlineFade;
      background-position: 0% 100%;
    }
    50% {
      background-position: 0% 0%;
    }
    51% {
      background-color: $colorOutlineFade;
    }
    59% {
      background-color: $colorOutline;
      background-position: 0% 0%;
    }
    60% {
      background-color: $colorOutlineFade;
      background-position: 0% 100%;
    }
    80% {
      background-position: 0% 0%;
    }
    81% {
      background-color: $colorOutlineFade;
    }
    90%,
    100% {
      background-color: $colorOutline;
    }
  }

  @keyframes trackBallSlide {
    0% {
      opacity: 1;
      transform: scale(1) translateY(-$posTrackball);
    }
    6% {
      opacity: 1;
      transform: scale(0.9) translateY($posTrackball/4);
    }
    14% {
      opacity: 0;
      transform: scale($shrinkTrackball) translateY($posTrackball * 2);
    }
    15%,
    19% {
      opacity: 0;
      transform: scale($shrinkTrackball) translateY(-$posTrackball);
    }
    28%,
    29.99% {
      opacity: 1;
      transform: scale(1) translateY(-$posTrackball);
    }
    30% {
      opacity: 1;
      transform: scale(1) translateY(-$posTrackball);
    }
    36% {
      opacity: 1;
      transform: scale(0.9) translateY($posTrackball/4);
    }
    44% {
      opacity: 0;
      transform: scale($shrinkTrackball) translateY($posTrackball * 2);
    }
    45%,
    49% {
      opacity: 0;
      transform: scale($shrinkTrackball) translateY(-$posTrackball);
    }
    58%,
    59.99% {
      opacity: 1;
      transform: scale(1) translateY(-$posTrackball);
    }
    60% {
      opacity: 1;
      transform: scale(1) translateY(-$posTrackball);
    }
    66% {
      opacity: 1;
      transform: scale(0.9) translateY($posTrackball/4);
    }
    74% {
      opacity: 0;
      transform: scale($shrinkTrackball) translateY($posTrackball * 2);
    }
    75%,
    79% {
      opacity: 0;
      transform: scale($shrinkTrackball) translateY(-$posTrackball);
    }
    88%,
    100% {
      opacity: 1;
      transform: scale(1) translateY(-$posTrackball);
    }
  }

  @keyframes nudgeMouse {
    0% {
      transform: translateY(0);
    }
    20% {
      transform: translateY($posMouse);
    }
    30% {
      transform: translateY(0);
    }
    50% {
      transform: translateY($posMouse);
    }
    60% {
      transform: translateY(0);
    }
    80% {
      transform: translateY($posMouse);
    }
    90% {
      transform: translateY(0);
    }
  }

  @keyframes nudgeText {
    0% {
      transform: translateY(0);
    }
    20% {
      transform: translateY($posText);
    }
    30% {
      transform: translateY(0);
    }
    50% {
      transform: translateY($posText);
    }
    60% {
      transform: translateY(0);
    }
    80% {
      transform: translateY($posText);
    }
    90% {
      transform: translateY(0);
    }
  }

  @keyframes colorText {
    21% {
      color: $colorOutlineFade;
    }
    30% {
      color: $colorOutline;
    }
    51% {
      color: $colorOutlineFade;
    }
    60% {
      color: $colorOutline;
    }
    81% {
      color: $colorOutlineFade;
    }
    90% {
      color: $colorOutline;
    }
  }
}
